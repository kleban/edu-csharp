// <auto-generated />
using Many2ManyPlusSelfRef.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Many2ManyPlusSelfRef.Migrations
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClothingSize", b =>
                {
                    b.Property<int>("ClothsId")
                        .HasColumnType("int");

                    b.Property<int>("SizesId")
                        .HasColumnType("int");

                    b.HasKey("ClothsId", "SizesId");

                    b.HasIndex("SizesId");

                    b.ToTable("ClothingSize");
                });

            modelBuilder.Entity("Many2ManyPlusSelfRef.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Many2ManyPlusSelfRef.Entities.Clothing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Cloths");
                });

            modelBuilder.Entity("Many2ManyPlusSelfRef.Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "S"
                        },
                        new
                        {
                            Id = 2,
                            Title = "M"
                        },
                        new
                        {
                            Id = 3,
                            Title = "L"
                        },
                        new
                        {
                            Id = 4,
                            Title = "XL"
                        },
                        new
                        {
                            Id = 6,
                            Title = "XXL"
                        });
                });

            modelBuilder.Entity("ClothingSize", b =>
                {
                    b.HasOne("Many2ManyPlusSelfRef.Entities.Clothing", null)
                        .WithMany()
                        .HasForeignKey("ClothsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Many2ManyPlusSelfRef.Entities.Size", null)
                        .WithMany()
                        .HasForeignKey("SizesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Many2ManyPlusSelfRef.Entities.Category", b =>
                {
                    b.HasOne("Many2ManyPlusSelfRef.Entities.Category", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Many2ManyPlusSelfRef.Entities.Clothing", b =>
                {
                    b.HasOne("Many2ManyPlusSelfRef.Entities.Category", "Category")
                        .WithMany("Clos")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Many2ManyPlusSelfRef.Entities.Category", b =>
                {
                    b.Navigation("Clos");

                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
